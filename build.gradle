plugins {
    id 'java'
    id "idea"
    id "org.springframework.boot" version "$springBootVersion"
    id "io.freefair.lombok" version "$lombokVersion"
    id 'com.google.cloud.tools.jib' version "$jibVersion"
}

apply plugin: "java"
apply plugin: "io.spring.dependency-management"

group = 'org.abondar.experimental.travel'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("org.springframework.boot:spring-boot-starter-batch")
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-mail")

    implementation("org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatisVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    implementation("net.logstash.logback:logstash-logback-encoder:$encoderVersion")
    implementation("org.flywaydb:flyway-core:$flywayVersion")
    implementation("org.flywaydb:flyway-mysql:$flywayVersion")
    implementation("com.mysql:mysql-connector-j:$mysqlVersion")
    implementation("net.logstash.logback:logstash-logback-encoder:$encoderVersion")
    implementation("org.springframework.integration:spring-integration-sftp:$springIntVersion")
    implementation("org.glassfish.jaxb:jaxb-runtime:$jaxbRuntimeVersion")
    implementation("jakarta.xml.bind:jakarta.xml.bind-api:$jaxbBindVersion")
    implementation("org.springframework:spring-oxm:$springOxmVersion")


    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.batch:spring-batch-test")
    testImplementation("com.h2database:h2")

    testImplementation("org.testcontainers:junit-jupiter:$testConVersion")
    testImplementation("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:$mybatisVersion")
    testImplementation("org.testcontainers:mysql:$testConVersion")
}

test {
    useJUnitPlatform() {
        excludeTags "integration"
    }
}

def integrationTest = tasks.register("integrationTest",Test){
    useJUnitPlatform{
        includeTags "integration"
    }
}


jib {
    from {
        //image = "eclipse-temurin:17-jre"
        image = "ghcr.io/graalvm/jdk-community:22"
    }
    to {
        image = "$imageName:$project.version"

        auth {
            username = "$dockerhubUser"
            password = "$dockerhubPass"
        }
    }

    container {
        mainClass = "org.abondar.experimental.travel.TravelDataAggregatorApplication"
    }

}
